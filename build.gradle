import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.jetbrains.kotlin.jvm' version '1.9.22'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.22'
    id "org.jetbrains.kotlin.plugin.serialization" version "2.0.0"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    maven {
        url "https://repo.specmatic.io/releases"
    }
    maven {
        url "https://packages.confluent.io/maven/"
    }
    mavenCentral()
}

ext['kafka.version'] = '3.9.1'

dependencies {
    implementation ('org.springframework.boot:spring-boot-starter') {
        exclude group: 'ch.qos.logback', module: 'logback-classic'
    }
    implementation 'org.springframework.kafka:spring-kafka:3.3.7'

    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.19.0'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin:2.19.0'
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2"

    testImplementation("org.assertj:assertj-core:3.27.6")
    testImplementation 'org.junit.jupiter:junit-jupiter:6.0.0'
    testImplementation('io.specmatic.async:specmatic-kafka:1.4.2')
    testImplementation("org.springframework.kafka:spring-kafka-test:3.3.7")
    testImplementation("org.springframework.boot:spring-boot-starter-test:3.5.4")
    testImplementation "org.testcontainers:junit-jupiter:1.21.3"
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs += '-Xjsr305=strict'
        jvmTarget = '17'
    }
}

test {
    useJUnitPlatform()
    environment "PUBSUB_EMULATOR_HOST", "localhost:8085"
    testLogging.showStandardStreams = true
    testLogging {
        showStandardStreams = true
        events "passed", "skipped", "failed"
        afterSuite { desc, result ->
            if (desc.parent == null) {
                println()
                println("-------------------------")
                println("Total tests run: ${result.testCount}")
                println("Tests passed: ${result.successfulTestCount}")
                println("Tests failed: ${result.failedTestCount}")
                println("Tests skipped: ${result.skippedTestCount}")
                println("-------------------------")
                println()
            }
        }
    }
}

configurations.all {
    resolutionStrategy.eachDependency {
        if (requested.group == "com.fasterxml.jackson.core") {
            useVersion("2.19.0")
        }
    }
}
