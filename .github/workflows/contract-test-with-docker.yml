name: Contract Test with Docker (Kafka)
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  contract-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Start Kafka broker
        run: |
          docker compose up -d
          sleep 10

      - name: Create Kafka topics
        run: |
          docker exec kafka /opt/kafka/bin/kafka-topics.sh --create --topic place-order --partitions 3 --replication-factor 1 --bootstrap-server localhost:9092
          docker exec kafka /opt/kafka/bin/kafka-topics.sh --create --topic process-order --partitions 3 --replication-factor 1 --bootstrap-server localhost:9092
          docker exec kafka /opt/kafka/bin/kafka-topics.sh --create --topic notification --partitions 3 --replication-factor 1 --bootstrap-server localhost:9092

      - name: Start application
        run: |
          nohup ./gradlew bootRun > app.log 2>&1 &
          echo $! > app.pid

      - name: Wait for application
        run: |
          echo "Waiting for application..."
          sleep 10

      - name: Create reports directory
        run: mkdir -p build/reports

      - name: Run Specmatic contract tests
        run: |
          docker run --network host \
            -v "${{ github.workspace }}/specmatic.yaml:/usr/src/app/specmatic.yaml" \
            -v "${{ github.workspace }}/src/test/resources:/usr/src/app/examples" \
            -v "${{ github.workspace }}/build/reports:/usr/src/app/build/reports" \
            specmatic/specmatic-kafka test --broker localhost:9092 --examples=examples

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: contract-test-reports
          path: build/reports/

      - name: Show application logs on failure
        if: failure()
        run: cat app.log || echo "No application logs found"

      - name: Stop application
        if: always()
        run: |
          if [ -f app.pid ]; then
            kill $(cat app.pid) || true
          fi
          pkill -f 'bootRun' || true
          sleep 2
          pkill -9 -f 'bootRun' || true

      - name: Stop Kafka broker
        if: always()
        run: docker compose down || true
